// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: words.sql

package db

import (
	"context"
)

const deleteWords = `-- name: DeleteWords :exec
DELETE FROM words
WHERE words_id = $1
`

func (q *Queries) DeleteWords(ctx context.Context, db DBTX, wordsID int64) error {
	_, err := db.Exec(ctx, deleteWords, wordsID)
	return err
}

const insertWords = `-- name: InsertWords :one
INSERT INTO words (
    test_set_id, english_word, uzbek_word
) VALUES (
    $1, $2, $3
) RETURNING words_id, test_set_id, english_word, uzbek_word
`

type InsertWordsParams struct {
	TestSetID   int64  `json:"test_set_id"`
	EnglishWord string `json:"english_word"`
	UzbekWord   string `json:"uzbek_word"`
}

func (q *Queries) InsertWords(ctx context.Context, db DBTX, arg InsertWordsParams) (Word, error) {
	row := db.QueryRow(ctx, insertWords, arg.TestSetID, arg.EnglishWord, arg.UzbekWord)
	var i Word
	err := row.Scan(
		&i.WordsID,
		&i.TestSetID,
		&i.EnglishWord,
		&i.UzbekWord,
	)
	return i, err
}
