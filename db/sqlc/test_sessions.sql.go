// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: test_sessions.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const newTestSession = `-- name: NewTestSession :one
INSERT INTO test_sessions (
    student_id, test_set_id, start_time, correct_count, incorrect_count, completed
) VALUES (
    $1, $2, $3, $4, $5, $6
) RETURNING session_id, student_id, test_set_id, start_time, correct_count, incorrect_count, completed
`

type NewTestSessionParams struct {
	StudentID      int64              `json:"student_id"`
	TestSetID      int64              `json:"test_set_id"`
	StartTime      pgtype.Timestamptz `json:"start_time"`
	CorrectCount   int32              `json:"correct_count"`
	IncorrectCount int32              `json:"incorrect_count"`
	Completed      bool               `json:"completed"`
}

func (q *Queries) NewTestSession(ctx context.Context, db DBTX, arg NewTestSessionParams) (TestSession, error) {
	row := db.QueryRow(ctx, newTestSession,
		arg.StudentID,
		arg.TestSetID,
		arg.StartTime,
		arg.CorrectCount,
		arg.IncorrectCount,
		arg.Completed,
	)
	var i TestSession
	err := row.Scan(
		&i.SessionID,
		&i.StudentID,
		&i.TestSetID,
		&i.StartTime,
		&i.CorrectCount,
		&i.IncorrectCount,
		&i.Completed,
	)
	return i, err
}
