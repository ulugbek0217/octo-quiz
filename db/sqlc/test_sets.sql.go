// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: test_sets.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTestSet = `-- name: CreateTestSet :one
INSERT INTO test_sets (
    test_set_name, creator_id, is_public, time_limit
) VALUES (
    $1, $2, $3, $4
) RETURNING test_set_id, test_set_name, creator_id, is_public, time_limit
`

type CreateTestSetParams struct {
	TestSetName string      `json:"test_set_name"`
	CreatorID   int64       `json:"creator_id"`
	IsPublic    bool        `json:"is_public"`
	TimeLimit   pgtype.Int4 `json:"time_limit"`
}

func (q *Queries) CreateTestSet(ctx context.Context, db DBTX, arg CreateTestSetParams) (TestSet, error) {
	row := db.QueryRow(ctx, createTestSet,
		arg.TestSetName,
		arg.CreatorID,
		arg.IsPublic,
		arg.TimeLimit,
	)
	var i TestSet
	err := row.Scan(
		&i.TestSetID,
		&i.TestSetName,
		&i.CreatorID,
		&i.IsPublic,
		&i.TimeLimit,
	)
	return i, err
}

const deleteTestSet = `-- name: DeleteTestSet :exec
DELETE FROM test_sets
WHERE test_set_id = $1
`

func (q *Queries) DeleteTestSet(ctx context.Context, db DBTX, testSetID int64) error {
	_, err := db.Exec(ctx, deleteTestSet, testSetID)
	return err
}

const makeTestSetPublic = `-- name: MakeTestSetPublic :exec
UPDATE test_sets
SET is_public = TRUE
WHERE test_set_id = $1
`

func (q *Queries) MakeTestSetPublic(ctx context.Context, db DBTX, testSetID int64) error {
	_, err := db.Exec(ctx, makeTestSetPublic, testSetID)
	return err
}
